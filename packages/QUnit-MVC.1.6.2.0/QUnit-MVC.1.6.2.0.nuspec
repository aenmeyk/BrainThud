<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>QUnit-MVC</id>
    <version>1.6.2.0</version>
    <title>QUnit for ASP.NET MVC</title>
    <authors>John Resig, Jörn Zaefferer</authors>
    <owners>John Resig, Jörn Zaefferer</owners>
    <licenseUrl>https://raw.github.com/jquery/jquery/master/GPL-LICENSE.txt</licenseUrl>
    <projectUrl>http://docs.jquery.com/QUnit</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>This QUnit support for ASP.NET MVC. You may also use it for ASP.NET Webforms, but the css folder will not be on the default location.
QUnit is a powerful, easy-to-use, JavaScript test suite. It's used by the jQuery project to test its code and plugins but is capable of testing any generic JavaScript code (and even capable of testing JavaScript code on the server-side).

QUnit is especially useful for regression testing: Whenever a bug is reported, write a test that asserts the existence of that particular bug. Then fix it and commit both. Every time you work on the code again, run the tests. If the bug comes up again - a regression - you'll spot it immediately and know how to fix it, because you know what code you just changed.

Having good unit test coverage makes safe refactoring easy and cheap. You can run the tests after each small refactoring step and always know what change broke something.

QUnit is similar to other unit testing frameworks like JUnit, but makes use of the features JavaScript provides and helps with testing code in the browser, eg. with it's stop/start facilities for testing asynchronous code.</description>
    <summary>QUnit is a powerful, easy-to-use, JavaScript test suite. It is capable of testing any generic JavaScript code. This adds support for ASP.NET MVC.</summary>
    <tags>qunit, jquery,test,unit,javascript,coffeescript</tags>
  </metadata>
</package>